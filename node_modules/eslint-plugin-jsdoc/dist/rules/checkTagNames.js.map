{"version":3,"sources":["rules/checkTagNames.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;kBAGe,4BAAa,gBAItB;QAHF,mBAGE;QAFF,qBAEE;QADF,mBACE;;AACF,2BAAU,MAAM,IAAN,EAAY,UAAC,QAAD,EAAc;AAChC,YAAI,MAAM,UAAN,CAAiB,SAAS,GAAT,CAArB,EAAoC;AAChC,gBAAM,mBAAmB,MAAM,mBAAN,CAA0B,SAAS,GAAT,CAA7C,CAD0B;;AAGhC,gBAAI,qBAAqB,SAAS,GAAT,EAAc;AACnC,uBAAO,8CAA8C,SAAS,GAAT,GAAe,oBAA7D,GAAoF,gBAApF,GAAuG,IAAvG,CAAP,CADmC;aAAvC;SAHJ,MAMO;AACH,mBAAO,6BAA6B,SAAS,GAAT,GAAe,IAA5C,CAAP,CADG;SANP;KADkB,CAAtB,CADE;CAJsB","file":"rules/checkTagNames.js","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from './../iterateJsdoc';\n\nexport default iterateJsdoc(({\n    jsdoc,\n    report,\n    utils\n}) => {\n    _.forEach(jsdoc.tags, (jsdocTag) => {\n        if (utils.isValidTag(jsdocTag.tag)) {\n            const preferredTagName = utils.getPreferredTagName(jsdocTag.tag);\n\n            if (preferredTagName !== jsdocTag.tag) {\n                report('Invalid JSDoc tag (preference). Replace \"' + jsdocTag.tag + '\" JSDoc tag with \"' + preferredTagName + '\".');\n            }\n        } else {\n            report('Invalid JSDoc tag name \"' + jsdocTag.tag + '\".');\n        }\n    });\n});\n"],"sourceRoot":"/source/"}