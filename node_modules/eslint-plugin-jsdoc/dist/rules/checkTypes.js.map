{"version":3,"sources":["rules/checkTypes.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAI,aAAa,CACb,OADa,EAEb,UAFa,EAGb,MAHa,EAIb,QAJa,EAKb,QALa,EAMb,WANa,EAOb,OAPa,EAQb,UARa,EASb,SATa,EAUb,QAVa,EAWb,MAXa,EAYb,SAZa,CAAb;;AAeJ,IAAM,mBAAmB,CACrB,aADqB,EAErB,OAFqB,EAGrB,KAHqB,EAIrB,KAJqB,EAKrB,UALqB,EAMrB,MANqB,EAOrB,QAPqB,EAQrB,WARqB,CAAnB;;AAWN,aAAa,WAAW,MAAX,CAAkB,gBAAlB,CAAb;;AAEA,IAAM,oBAAoB,CACtB,SADsB,EAEtB,QAFsB,EAGtB,QAHsB,EAItB,OAJsB,EAKtB,QALsB,EAMtB,QANsB,EAOtB,MAPsB,EAQtB,UARsB,CAApB;;kBAWS,4BAAa,gBAGtB;QAFF,mBAEE;QADF,qBACE;;AACF,QAAM,YAAY,sBAAS,MAAM,IAAN,EAAY,UAAC,GAAD,EAAS;AAC5C,eAAO,wBAAW,UAAX,EAAuB,IAAI,GAAJ,CAA9B,CAD4C;KAAT,CAAjC,CADJ;;AAKF,2BAAU,SAAV,EAAqB,UAAC,QAAD,EAAc;AAC/B,4BAAO,iBAAP,EAA0B,UAAC,gBAAD,EAAsB;AAC5C,gBAAI,iBAAiB,WAAjB,OAAmC,SAAS,IAAT,CAAc,WAAd,EAAnC,IAAkE,qBAAqB,SAAS,IAAT,EAAe;AACtG,uBAAO,oBAAoB,SAAS,GAAT,GAAe,IAAnC,GAA0C,SAAS,IAAT,GAAgB,UAA1D,GAAuE,SAAS,IAAT,GAAgB,IAAvF,CAAP,CADsG;;AAGtG,uBAAO,IAAP,CAHsG;aAA1G;SADsB,CAA1B,CAD+B;KAAd,CAArB,CALE;CAHsB","file":"rules/checkTypes.js","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from './../iterateJsdoc';\n\nlet targetTags = [\n    'class',\n    'constant',\n    'enum',\n    'member',\n    'module',\n    'namespace',\n    'param',\n    'property',\n    'returns',\n    'throws',\n    'type',\n    'typedef'\n];\n\nconst targetTagAliases = [\n    'constructor',\n    'const',\n    'var',\n    'arg',\n    'argument',\n    'prop',\n    'return',\n    'exception'\n];\n\ntargetTags = targetTags.concat(targetTagAliases);\n\nconst strictNativeTypes = [\n    'boolean',\n    'number',\n    'string',\n    'Array',\n    'Object',\n    'RegExp',\n    'Date',\n    'Function'\n];\n\nexport default iterateJsdoc(({\n    jsdoc,\n    report\n}) => {\n    const jsdocTags = _.filter(jsdoc.tags, (tag) => {\n        return _.includes(targetTags, tag.tag);\n    });\n\n    _.forEach(jsdocTags, (jsdocTag) => {\n        _.some(strictNativeTypes, (strictNativeType) => {\n            if (strictNativeType.toLowerCase() === jsdocTag.type.toLowerCase() && strictNativeType !== jsdocTag.type) {\n                report('Invalid JSDoc @' + jsdocTag.tag + ' \"' + jsdocTag.name + '\" type \"' + jsdocTag.type + '\".');\n\n                return true;\n            }\n        });\n    });\n});\n"],"sourceRoot":"/source/"}