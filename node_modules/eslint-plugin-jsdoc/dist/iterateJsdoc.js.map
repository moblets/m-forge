{"version":3,"sources":["iterateJsdoc.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,aAAa,SAAb,UAAa,CAAC,YAAD,EAAe,KAAf,EAAsB,iBAAtB,EAA4C;AAC3D,QAAM,QAAQ,EAAR,CADqD;;AAG3D,UAAM,yBAAN,GAAkC,YAAM;AACpC,eAAO,qBAAW,yBAAX,CAAqC,YAArC,CAAP,CADoC;KAAN,CAHyB;;AAO3D,UAAM,0BAAN,GAAmC,YAAM;AACrC,eAAO,qBAAW,0BAAX,CAAsC,KAAtC,EAA6C,MAAM,mBAAN,CAA0B,OAA1B,CAA7C,CAAP,CADqC;KAAN,CAPwB;;AAW3D,UAAM,sBAAN,GAA+B,YAAM;AACjC,eAAO,qBAAW,sBAAX,CAAkC,KAAlC,EAAyC,MAAM,mBAAN,CAA0B,OAA1B,CAAzC,CAAP,CADiC;KAAN,CAX4B;;AAe3D,UAAM,mBAAN,GAA4B,UAAC,IAAD,EAAU;AAClC,eAAO,qBAAW,mBAAX,CAA+B,IAA/B,EAAqC,iBAArC,CAAP,CADkC;KAAV,CAf+B;;AAmB3D,UAAM,UAAN,GAAmB,UAAC,IAAD,EAAU;AACzB,eAAO,qBAAW,UAAX,CAAsB,IAAtB,CAAP,CADyB;KAAV,CAnBwC;;AAuB3D,WAAO,KAAP,CAvB2D;CAA5C;;kBA0BJ,UAAC,QAAD,EAAc;AACzB,WAAO,UAAC,OAAD,EAAa;AAChB,YAAM,aAAa,QAAQ,aAAR,EAAb,CADU;AAEhB,YAAM,oBAAoB,mBAAM,OAAN,EAAe,kCAAf,KAAsD,EAAtD,CAFV;;AAIhB,YAAM,aAAa,SAAb,UAAa,CAAC,YAAD,EAAkB;AACjC,gBAAM,YAAY,WAAW,eAAX,CAA2B,YAA3B,CAAZ,CAD2B;;AAGjC,gBAAI,CAAC,SAAD,EAAY;AACZ,uBADY;aAAhB;;AAIA,gBAAM,QAAQ,6BAAc,OAAO,UAAU,KAAV,GAAkB,IAAzB,EAA+B;;AAEvD,yBAAS,CACL,wBAAc,OAAd,CAAsB,SAAtB,EACA,wBAAc,OAAd,CAAsB,UAAtB,EACA,UAAC,GAAD,EAAM,IAAN,EAAe;AACX,wBAAI,wBAAW,CAAC,QAAD,EAAW,SAAX,CAAX,EAAkC,KAAK,GAAL,CAAtC,EAAiD;AAC7C,+BAAO,IAAP,CAD6C;qBAAjD;AAGA,2BAAO,wBAAc,OAAd,CAAsB,UAAtB,CAAiC,GAAjC,EAAsC,IAAtC,CAAP,CAJW;iBAAf,EAMA,wBAAc,OAAd,CAAsB,iBAAtB,CATJ;aAFU,EAaX,CAbW,KAaL,EAbK,CAPmB;;AAsBjC,gBAAM,SAAS,SAAT,MAAS,CAAC,OAAD,EAAa;AACxB,wBAAQ,MAAR,CAAe,SAAf,EAA0B,OAA1B,EADwB;aAAb,CAtBkB;;AA0BjC,gBAAM,QAAQ,WAAW,YAAX,EAAyB,KAAzB,EAAgC,iBAAhC,CAAR,CA1B2B;;AA4BjC,qBAAS;AACL,gCADK;AAEL,0CAFK;AAGL,4BAHK;AAIL,oCAJK;AAKL,8BALK;AAML,4BANK;aAAT,EA5BiC;SAAlB,CAJH;;AA0ChB,eAAO;AACH,qCAAyB,UAAzB;AACA,iCAAqB,UAArB;AACA,gCAAoB,UAApB;SAHJ,CA1CgB;KAAb,CADkB;CAAd","file":"iterateJsdoc.js","sourcesContent":["import _ from 'lodash';\nimport commentParser from 'comment-parser';\nimport jsdocUtils from './jsdocUtils';\n\nconst curryUtils = (functionNode, jsdoc, tagNamePreference) => {\n    const utils = {};\n\n    utils.getFunctionParameterNames = () => {\n        return jsdocUtils.getFunctionParameterNames(functionNode);\n    };\n\n    utils.getJsdocParameterNamesDeep = () => {\n        return jsdocUtils.getJsdocParameterNamesDeep(jsdoc, utils.getPreferredTagName('param'));\n    };\n\n    utils.getJsdocParameterNames = () => {\n        return jsdocUtils.getJsdocParameterNames(jsdoc, utils.getPreferredTagName('param'));\n    };\n\n    utils.getPreferredTagName = (name) => {\n        return jsdocUtils.getPreferredTagName(name, tagNamePreference);\n    };\n\n    utils.isValidTag = (name) => {\n        return jsdocUtils.isValidTag(name);\n    };\n\n    return utils;\n};\n\nexport default (iterator) => {\n    return (context) => {\n        const sourceCode = context.getSourceCode();\n        const tagNamePreference = _.get(context, 'settings.jsdoc.tagNamePreference') || {};\n\n        const checkJsdoc = (functionNode) => {\n            const jsdocNode = sourceCode.getJSDocComment(functionNode);\n\n            if (!jsdocNode) {\n                return;\n            }\n\n            const jsdoc = commentParser('/*' + jsdocNode.value + '*/', {\n                // @see https://github.com/yavorskiy/comment-parser/issues/21\n                parsers: [\n                    commentParser.PARSERS.parse_tag,\n                    commentParser.PARSERS.parse_type,\n                    (str, data) => {\n                        if (_.includes(['return', 'returns'], data.tag)) {\n                            return null;\n                        }\n                        return commentParser.PARSERS.parse_name(str, data);\n                    },\n                    commentParser.PARSERS.parse_description\n                ]\n            })[0] || {};\n\n            const report = (message) => {\n                context.report(jsdocNode, message);\n            };\n\n            const utils = curryUtils(functionNode, jsdoc, tagNamePreference);\n\n            iterator({\n                context,\n                functionNode,\n                jsdoc,\n                jsdocNode,\n                report,\n                utils\n            });\n        };\n\n        return {\n            ArrowFunctionExpression: checkJsdoc,\n            FunctionDeclaration: checkJsdoc,\n            FunctionExpression: checkJsdoc\n        };\n    };\n};\n"],"sourceRoot":"/source/"}